-Author Pranshu Teotia

-Name Two Sets

-Problem_Link https://cses.fi/problemset/task/1092

-Code c++'
#include <iostream>
#include <list>

int main() {
  size_t n;
  std::cin >> n;

  size_t t_sum = (n*(n+1))/2, sum = 0; 

  if(t_sum % 2 != 0) {
    std::cout << "NO\n";
    return 0;
  }

  std::list<size_t> nums, s1, s2;

  for(size_t i=0; i<n; ++i) nums.push_back(i+1);
  bool f = true;
  while(sum != t_sum/2) {
    if(f) {
      sum += nums.back();
      s1.push_back(nums.back());
      nums.pop_back();
    
    } else {
      sum += nums.front();
      s1.push_back(nums.front());
      nums.pop_front();
    }

    f = !f;
  }

  for(size_t e : nums) s2.push_back(e);

  std::cout << "YES\n" << s1.size() << std::endl;
  for(size_t e : s1) {
    std::cout << e << " "; 
  }

  std::cout << std::endl << s2.size() << std::endl;
  for(size_t e : s2) {
    std::cout << e << " ";
  }
  std::cout << std::endl;

}
'

-Explanation Calculate the sum of numbers from 1 through n. We can use the sum of n natural numbers forumula.
If the sum is odd then it can't be split into two sets of even sum. So we can just print out No and return 0.

If the sum is indeed even then we can construct one of the sets by alternating between the largest and smallest
element and adding it to the first set untils we reach the desired half of the sum.

For example if n = 7
The sum is 28. The half of that would be 14.
The seqeuence is:  1 2 3 4 5 6 7
So the first set would contain: 7 1 6 => sum is 14

The other set would contain the remaining numbers.